"""
	This a test for the function matrix_divided in 2-matrix_divided
=================================================================================

	>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

	>>> print(matrix_divided([[1, 2, 3],[4, 5, 6]], 3))
	[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

	>>> print(matrix_divided([[1, 2, 3],[4, 5, 6]], 3.0))
	[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

	checks if parameter are wrong
	>>> print(matrix_divided([[1, 2, 3],[4, 5, 6]], "s"))
	Traceback (most recent call last):
	TypeError: div must be a number

	>>> print(matrix_divided([[1, 2, 3],[4, "s", 6]], 3.0))
	Traceback (most recent call last):
	TypeError: matrix must be a matrix (list of lists) of integers/floats

	>>> print(matrix_divided())
	Traceback (most recent call last):
	TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'
	>>> print(matrix_divided(None))
	Traceback (most recent call last):
	TypeError: matrix_divided() missing 1 required positional argument: 'div'

	>>> print(matrix_divided([[1, 2, 3], [4, 5]], 3))
	Traceback (most recent call last):
	TypeError: Each row of the matrix must have the same size

	>>> print(matrix_divided("", 3))
	Traceback (most recent call last):
        TypeError: matrix must be a matrix (list of lists) of integers/floats

	>>> print(matrix_divided(None, 3))
	Traceback (most recent call last):
        TypeError: matrix must be a matrix (list of lists) of integers/floats

	>>> print(matrix_divided(23, 3))
	Traceback (most recent call last):
        TypeError: matrix must be a matrix (list of lists) of integers/floats

	>>> print(matrix_divided([[1, 2, 3], [4, 5, 6]], 0))
	Traceback (most recent call last):
	ZeroDivisionError: division by zero

"""
